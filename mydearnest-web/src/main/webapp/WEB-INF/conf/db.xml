<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd"
	default-autowire="byName">
	
	<!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:hibernate.properties" />
	</bean>
	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/${hibernate.connection.datasource}</value>
		</property>
	</bean>
	
	<mongo:mongo host="db.mydearnest.com" port="27017" />
	
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="mydearnestlocaltest" />
	</bean>
	

	
	
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">   
			<props>
				
				<prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				
				<prop key="jdbc.fetch_size">50</prop>
				<prop key="jdbc.batch_size">25</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory</prop>
				
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
        
				
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				
				<prop key="hibernate.query.substitutions">true 1,false 0</prop>
				
				<prop key="hibernate.c3p0.initialPoolSize">10</prop>
				<prop key="hibernate.c3p0.minPoolSize">10</prop>
				<prop key="hibernate.c3p0.maxPoolSize">50</prop>
				<prop key="hibernate.c3p0.acquireIncrement">2</prop>
				<prop key="hibernate.c3p0.timeout">10</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckin">true</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">false</prop>
				<prop key="hibernate.c3p0.maxStatementsPerConnection">5</prop>
				<prop key="hibernate.c3p0.maxIdleTime">300</prop>
				<prop key="hibernate.c3p0.maxConnectionAge">14400</prop>
				<prop key="hibernate.c3p0.acquireRetryAttempts">10</prop>
				<prop key="hibernate.c3p0.preferredTestQuery">SELECT 1;</prop>
				<prop key="hibernate.c3p0.idleConnectionTestPeriod">300</prop>
				
			</props>
		</property>
	</bean>
	
	<!-- Specify our ORM vendor -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="packagesToScan" value="com.osquare.mydearnest.entity"></property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:queries</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	

</beans>
